name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.17.0'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci --no-audit --no-fund

  lint:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.17.0'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci --no-audit --no-fund

      - name: Lint code
        run: |
          export NX_NO_CLOUD=1
          echo "üìå NX_NO_CLOUD = $NX_NO_CLOUD"
          printenv | grep NX || true
          npx nx reset
          npx nx lint gift-helper --skip-nx-cache

  build:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.17.0'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci --no-audit --no-fund

      - name: Build application
        run: |
          export NX_NO_CLOUD=1
          echo "üìå Building with NX_NO_CLOUD = $NX_NO_CLOUD"
          npx nx build gift-helper --configuration=production --base-href=./ --deploy-url=./

      - name: Determine build directory
        id: build_dir
        run: |
          if [ -d "dist/gift-helper/browser" ]; then
            echo "dir=dist/gift-helper/browser" >> $GITHUB_OUTPUT
          else
            echo "dir=dist/gift-helper" >> $GITHUB_OUTPUT
          fi

      - name: Prepare GitHub Pages artifact
        run: |
          mkdir -p public
          # –ò—Å–ø–æ–ª—å–∑—É–µ–º cp —Å –æ–ø—Ü–∏–µ–π -L ‚Äî –∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –ø–æ —Å—Å—ã–ª–∫–∞–º (—Ä–∞–∑—ã–º–µ–Ω–æ–≤—ã–≤–∞—Ç—å)
          cp -rL ${{ steps.build_dir.outputs.dir }}/* public/
          # –ö–æ–ø–∏—Ä—É–µ–º 404.html
          cp public/index.html public/404.html

      - name: üîç Check for symlinks in public/
        run: |
          echo "üîç Searching for symbolic links in public/..."
          find public -type l -ls
          if [ -n "$(find public -type l)" ]; then
            echo "‚ùå ERROR: Symbolic links found in public/. GitHub Pages does not allow symlinks."
            exit 1
          else
            echo "‚úÖ No symlinks found in public/. Safe to deploy."
          fi

      - name: Verify public structure
        run: |
          echo "üìÅ Contents of public/ (will be deployed):"
          ls -la public/

      - name: Upload artifact for GitHub Pages
        uses: actions/upload-artifact@v4
        with:
          name: github-pages
          path: public/
          retention-days: 7

  validate:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: github-pages
          path: public

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.17.0'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci --no-audit --no-fund

      - name: Validate build
        run: |
          # –ü—Ä–∏–º–µ—Ä: –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞–ª–∏—á–∏–µ index.html
          if [ -f "public/index.html" ]; then
            echo "‚úÖ index.html found"
          else
            echo "‚ùå index.html not found!"
            exit 1
          fi

  deploy:
    runs-on: ubuntu-latest
    needs: validate
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Setup Pages
        uses: actions/configure-pages@v4
        # –ù–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ build-output ‚Äî –æ–Ω –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4